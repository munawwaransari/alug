(()=>{"use strict";var t={607:(t,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.HandwritingCanvas=void 0,n.HandwritingCanvas=class{canvasElement;_context;_lastPosition=null;_dragging=!1;_isEmpty=!0;constructor(t){this.canvasElement=t,this._context=t.getContext("2d"),this._context.lineCap="round",this._context.lineJoin="round",this._context.lineWidth=10,this._context.strokeStyle="black",t.addEventListener("mousedown",(()=>{this.dragStart()})),t.addEventListener("mouseup",(()=>{this.dragEnd()})),t.addEventListener("mouseout",(()=>{this.dragEnd()})),t.addEventListener("mousemove",(t=>{const n={x:t.offsetX,y:t.offsetY};this.draw(n)}))}toBlob(t,n){return new Promise((s=>{this.canvasElement.toBlob((t=>{s(t)}),t,n)}))}clear(){this._isEmpty=!0,this._context.clearRect(0,0,this.canvasElement.width,this.canvasElement.height)}get context(){return this._context}get isEmpty(){return this._isEmpty}dragStart(){this._context.beginPath(),this._dragging=!0,this._isEmpty=!1}dragEnd(){this._context.closePath(),this._dragging=!1,this._lastPosition=null}draw(t){this._dragging&&(null===this._lastPosition?this._context.moveTo(t.x,t.y):this._context.moveTo(this._lastPosition.x,this._lastPosition.y),this._context.lineTo(t.x,t.y),this._context.stroke(),this._lastPosition=t)}}}},n={};function s(e){var i=n[e];if(void 0!==i)return i.exports;var o=n[e]={exports:{}};return t[e](o,o.exports,s),o.exports}(()=>{const t=s(607);window.HandwritingCanvas=t.HandwritingCanvas})()})();